#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import typing as _typing
import builtins


import enum

import folly.iobuf as _fbthrift_iobuf
import test.fixtures.python_capi.module.thrift_abstract_types as _fbthrift_python_abstract_types
import thrift.python.types as _fbthrift_python_types
import thrift.python.mutable_types as _fbthrift_python_mutable_types
import thrift.python.mutable_exceptions as _fbthrift_python_mutable_exceptions
import thrift.python.mutable_containers as _fbthrift_python_mutable_containers

import apache.thrift.type.id.thrift_mutable_types as _fbthrift__apache__thrift__type__id__thrift_mutable_types

import apache.thrift.type.schema.thrift_mutable_types as _fbthrift__apache__thrift__type__schema__thrift_mutable_types

import test.fixtures.python_capi.serialized_dep.thrift_mutable_types as _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types

import test.fixtures.python_capi.thrift_dep.thrift_mutable_types as _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types

from test.fixtures.python_capi.module.thrift_enums import (
    MyEnum as _fbthrift_MyEnum,
    AnnoyingEnum as _fbthrift_AnnoyingEnum,
)
MyEnum = _fbthrift_MyEnum
AnnoyingEnum = _fbthrift_AnnoyingEnum


class MyStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.MyStruct):
    @property
    def inty(self) -> builtins.int: ...
    @inty.setter
    def inty(self, value: builtins.int) -> None: ...

    @property
    def stringy(self) -> builtins.str: ...
    @stringy.setter
    def stringy(self, value: builtins.str) -> None: ...

    @property
    def myItemy(self) -> _fbthrift_MyDataItem: ...
    @myItemy.setter
    def myItemy(self, value: _fbthrift_MyDataItem) -> None: ...

    @property
    def myEnumy(self) -> _fbthrift_MyEnum: ...
    @myEnumy.setter
    def myEnumy(self, value: _fbthrift_MyEnum) -> None: ...

    @property
    def booly(self) -> builtins.bool: ...
    @booly.setter
    def booly(self, value: builtins.bool) -> None: ...

    @property
    def floatListy(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.float]: ...
    @floatListy.setter
    def floatListy(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.float] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def strMappy(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, builtins.str]: ...
    @strMappy.setter
    def strMappy(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def intSetty(self) -> _fbthrift_python_mutable_containers.MutableSet[builtins.int]: ...
    @intSetty.setter
    def intSetty(self, value: _fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    def __init__(
        self, *,
        inty: _typing.Optional[builtins.int]=...,
        stringy: _typing.Optional[builtins.str]=...,
        myItemy: _typing.Optional[_fbthrift_MyDataItem]=...,
        myEnumy: _typing.Optional[_fbthrift_MyEnum]=...,
        booly: _typing.Optional[builtins.bool]=...,
        floatListy: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.float] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        strMappy: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.bytes, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        intSetty: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...
    ) -> None: ...

    def __call__(
        self, *,
        inty: _typing.Optional[builtins.int]=...,
        stringy: _typing.Optional[builtins.str]=...,
        myItemy: _typing.Optional[_fbthrift_MyDataItem]=...,
        myEnumy: _typing.Optional[_fbthrift_MyEnum]=...,
        booly: _typing.Optional[builtins.bool]=...,
        floatListy: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.float] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        strMappy: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.bytes, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        intSetty: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.int, builtins.str, _fbthrift_MyDataItem, _fbthrift_MyEnum, builtins.bool, _fbthrift_python_mutable_containers.MutableList[builtins.float], _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, builtins.str], _fbthrift_python_mutable_containers.MutableSet[builtins.int]]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.MyStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.MyStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyStruct": ...  # type: ignore
_fbthrift_MyStruct = MyStruct

class MyDataItem(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.MyDataItem):
    @property
    def s(self) -> builtins.str: ...
    @s.setter
    def s(self, value: builtins.str) -> None: ...

    def __init__(
        self, *,
        s: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __call__(
        self, *,
        s: _typing.Optional[builtins.str]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.MyDataItem": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.MyDataItem": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MyDataItem": ...  # type: ignore
_fbthrift_MyDataItem = MyDataItem

class TransitiveDoubler(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.TransitiveDoubler):
    def __init__(
        self,
    ) -> None: ...

    def __call__(
        self,
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[None]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.TransitiveDoubler": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.TransitiveDoubler": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.TransitiveDoubler": ...  # type: ignore
_fbthrift_TransitiveDoubler = TransitiveDoubler

class DoubledPair(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.DoubledPair):
    @property
    def s(self) -> builtins.str: ...
    @s.setter
    def s(self, value: builtins.str) -> None: ...

    @property
    def x(self) -> builtins.int: ...
    @x.setter
    def x(self, value: builtins.int) -> None: ...

    def __init__(
        self, *,
        s: _typing.Optional[builtins.str]=...,
        x: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __call__(
        self, *,
        s: _typing.Optional[builtins.str]=...,
        x: _typing.Optional[builtins.int]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str, builtins.int]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.DoubledPair": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.DoubledPair": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.DoubledPair": ...  # type: ignore
_fbthrift_DoubledPair = DoubledPair

class StringPair(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.StringPair):
    @property
    def normal(self) -> builtins.str: ...
    @normal.setter
    def normal(self, value: builtins.str) -> None: ...

    @property
    def doubled(self) -> builtins.str: ...
    @doubled.setter
    def doubled(self, value: builtins.str) -> None: ...

    def __init__(
        self, *,
        normal: _typing.Optional[builtins.str]=...,
        doubled: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __call__(
        self, *,
        normal: _typing.Optional[builtins.str]=...,
        doubled: _typing.Optional[builtins.str]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str, builtins.str]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.StringPair": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.StringPair": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.StringPair": ...  # type: ignore
_fbthrift_StringPair = StringPair

class EmptyStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.EmptyStruct):
    def __init__(
        self,
    ) -> None: ...

    def __call__(
        self,
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[None]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.EmptyStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.EmptyStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.EmptyStruct": ...  # type: ignore
_fbthrift_EmptyStruct = EmptyStruct

class PrimitiveStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.PrimitiveStruct):
    @property
    def booly(self) -> builtins.bool: ...
    @booly.setter
    def booly(self, value: builtins.bool) -> None: ...

    @property
    def charry(self) -> builtins.int: ...
    @charry.setter
    def charry(self, value: builtins.int) -> None: ...

    @property
    def shorty(self) -> builtins.int: ...
    @shorty.setter
    def shorty(self, value: builtins.int) -> None: ...

    @property
    def inty(self) -> builtins.int: ...
    @inty.setter
    def inty(self, value: builtins.int) -> None: ...

    @property
    def longy(self) -> builtins.int: ...
    @longy.setter
    def longy(self, value: builtins.int) -> None: ...

    @property
    def floaty(self) -> _typing.Optional[builtins.float]: ...
    @floaty.setter
    def floaty(self, value: _typing.Optional[builtins.float]) -> None: ...

    @property
    def dubby(self) -> _typing.Optional[builtins.float]: ...
    @dubby.setter
    def dubby(self, value: _typing.Optional[builtins.float]) -> None: ...

    @property
    def stringy(self) -> _typing.Optional[builtins.str]: ...
    @stringy.setter
    def stringy(self, value: _typing.Optional[builtins.str]) -> None: ...

    @property
    def bytey(self) -> _typing.Optional[builtins.bytes]: ...
    @bytey.setter
    def bytey(self, value: _typing.Optional[builtins.bytes]) -> None: ...

    @property
    def buffy(self) -> _fbthrift_iobuf.IOBuf: ...
    @buffy.setter
    def buffy(self, value: _fbthrift_iobuf.IOBuf) -> None: ...

    @property
    def pointbuffy(self) -> _fbthrift_iobuf.IOBuf: ...
    @pointbuffy.setter
    def pointbuffy(self, value: _fbthrift_iobuf.IOBuf) -> None: ...

    @property
    def patched_struct(self) -> _fbthrift_MyStruct: ...
    @patched_struct.setter
    def patched_struct(self, value: _fbthrift_MyStruct) -> None: ...

    @property
    def empty_struct(self) -> _fbthrift_EmptyStruct: ...
    @empty_struct.setter
    def empty_struct(self, value: _fbthrift_EmptyStruct) -> None: ...

    @property
    def fbstring(self) -> builtins.bytes: ...
    @fbstring.setter
    def fbstring(self, value: builtins.bytes) -> None: ...

    @property
    def managed_string_view(self) -> builtins.str: ...
    @managed_string_view.setter
    def managed_string_view(self, value: builtins.str) -> None: ...

    @property
    def some_error(self) -> _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.SomeError: ...
    @some_error.setter
    def some_error(self, value: _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.SomeError) -> None: ...

    def __init__(
        self, *,
        booly: _typing.Optional[builtins.bool]=...,
        charry: _typing.Optional[builtins.int]=...,
        shorty: _typing.Optional[builtins.int]=...,
        inty: _typing.Optional[builtins.int]=...,
        longy: _typing.Optional[builtins.int]=...,
        floaty: _typing.Optional[builtins.float]=...,
        dubby: _typing.Optional[builtins.float]=...,
        stringy: _typing.Optional[builtins.str]=...,
        bytey: _typing.Optional[builtins.bytes]=...,
        buffy: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        pointbuffy: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        patched_struct: _typing.Optional[_fbthrift_MyStruct]=...,
        empty_struct: _typing.Optional[_fbthrift_EmptyStruct]=...,
        fbstring: _typing.Optional[builtins.bytes]=...,
        managed_string_view: _typing.Optional[builtins.str]=...,
        some_error: _typing.Optional[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types._fbthrift_SomeError]=...
    ) -> None: ...

    def __call__(
        self, *,
        booly: _typing.Optional[builtins.bool]=...,
        charry: _typing.Optional[builtins.int]=...,
        shorty: _typing.Optional[builtins.int]=...,
        inty: _typing.Optional[builtins.int]=...,
        longy: _typing.Optional[builtins.int]=...,
        floaty: _typing.Optional[builtins.float]=...,
        dubby: _typing.Optional[builtins.float]=...,
        stringy: _typing.Optional[builtins.str]=...,
        bytey: _typing.Optional[builtins.bytes]=...,
        buffy: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        pointbuffy: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        patched_struct: _typing.Optional[_fbthrift_MyStruct]=...,
        empty_struct: _typing.Optional[_fbthrift_EmptyStruct]=...,
        fbstring: _typing.Optional[builtins.bytes]=...,
        managed_string_view: _typing.Optional[builtins.str]=...,
        some_error: _typing.Optional[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types._fbthrift_SomeError]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.bool, builtins.int, builtins.int, builtins.int, builtins.int, builtins.float, builtins.float, builtins.str, builtins.bytes, _fbthrift_iobuf.IOBuf, _fbthrift_iobuf.IOBuf, _fbthrift_MyStruct, _fbthrift_EmptyStruct, builtins.bytes, builtins.str, _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.SomeError]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.PrimitiveStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.PrimitiveStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.PrimitiveStruct": ...  # type: ignore
_fbthrift_PrimitiveStruct = PrimitiveStruct

class AdaptedFields(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.AdaptedFields):
    @property
    def adapted_int(self) -> builtins.int: ...
    @adapted_int.setter
    def adapted_int(self, value: builtins.int) -> None: ...

    @property
    def list_adapted_int(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.int]: ...
    @list_adapted_int.setter
    def list_adapted_int(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def set_adapted_int(self) -> _fbthrift_python_mutable_containers.MutableSet[builtins.int]: ...
    @set_adapted_int.setter
    def set_adapted_int(self, value: _fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def inline_adapted_int(self) -> builtins.int: ...
    @inline_adapted_int.setter
    def inline_adapted_int(self, value: builtins.int) -> None: ...

    def __init__(
        self, *,
        adapted_int: _typing.Optional[builtins.int]=...,
        list_adapted_int: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        set_adapted_int: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        inline_adapted_int: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __call__(
        self, *,
        adapted_int: _typing.Optional[builtins.int]=...,
        list_adapted_int: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        set_adapted_int: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        inline_adapted_int: _typing.Optional[builtins.int]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int], _fbthrift_python_mutable_containers.MutableSet[builtins.int], builtins.int]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.AdaptedFields": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.AdaptedFields": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.AdaptedFields": ...  # type: ignore
_fbthrift_AdaptedFields = AdaptedFields

class ListStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.ListStruct):
    @property
    def boolz(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.bool]: ...
    @boolz.setter
    def boolz(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.bool] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def intz(self) -> _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int]]: ...
    @intz.setter
    def intz(self, value: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def stringz(self) -> _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.str]]: ...
    @stringz.setter
    def stringz(self, value: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.str]] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def encoded(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.bytes]: ...
    @encoded.setter
    def encoded(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.bytes] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def uidz(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.int]: ...
    @uidz.setter
    def uidz(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def matrix(self) -> _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.float]]: ...
    @matrix.setter
    def matrix(self, value: _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.float]] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def ucharz(self) -> _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]]: ...
    @ucharz.setter
    def ucharz(self, value: _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def voxels(self) -> _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]]]: ...
    @voxels.setter
    def voxels(self, value: _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]]] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def buf_ptrs(self) -> _fbthrift_python_mutable_containers.MutableList[_fbthrift_iobuf.IOBuf]: ...
    @buf_ptrs.setter
    def buf_ptrs(self, value: _fbthrift_python_mutable_containers.MutableList[_fbthrift_iobuf.IOBuf] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    def __init__(
        self, *,
        boolz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.bool] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        intz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        stringz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.str] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        encoded: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.bytes] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        uidz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        matrix: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.float]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        ucharz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        voxels: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        buf_ptrs: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_iobuf.IOBuf] | _fbthrift_python_mutable_types._ThriftListWrapper]=...
    ) -> None: ...

    def __call__(
        self, *,
        boolz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.bool] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        intz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        stringz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.str] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        encoded: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.bytes] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        uidz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.int] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        matrix: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.float]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        ucharz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        voxels: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        buf_ptrs: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_iobuf.IOBuf] | _fbthrift_python_mutable_types._ThriftListWrapper]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[_fbthrift_python_mutable_containers.MutableList[builtins.bool], _fbthrift_python_mutable_containers.MutableList[builtins.int], _fbthrift_python_mutable_containers.MutableList[builtins.str], _fbthrift_python_mutable_containers.MutableList[builtins.bytes], _fbthrift_python_mutable_containers.MutableList[builtins.int], _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.float]], _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]], _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableList[builtins.int]]], _fbthrift_python_mutable_containers.MutableList[_fbthrift_iobuf.IOBuf]]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.ListStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.ListStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.ListStruct": ...  # type: ignore
_fbthrift_ListStruct = ListStruct

class SetStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.SetStruct):
    @property
    def enumz(self) -> _fbthrift_python_mutable_containers.MutableSet[_fbthrift_MyEnum]: ...
    @enumz.setter
    def enumz(self, value: _fbthrift_python_mutable_containers.MutableSet[_fbthrift_MyEnum] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def intz(self) -> _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int]]: ...
    @intz.setter
    def intz(self, value: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int]] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def binnaz(self) -> _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.bytes]]: ...
    @binnaz.setter
    def binnaz(self, value: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.bytes]] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def encoded(self) -> _fbthrift_python_mutable_containers.MutableSet[builtins.bytes]: ...
    @encoded.setter
    def encoded(self, value: _fbthrift_python_mutable_containers.MutableSet[builtins.bytes] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def uidz(self) -> _fbthrift_python_mutable_containers.MutableSet[builtins.int]: ...
    @uidz.setter
    def uidz(self, value: _fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def charz(self) -> _fbthrift_python_mutable_containers.MutableSet[builtins.int]: ...
    @charz.setter
    def charz(self, value: _fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def setz(self) -> _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableSet[builtins.int]]: ...
    @setz.setter
    def setz(self, value: _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableSet[builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    def __init__(
        self, *,
        enumz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[_fbthrift_MyEnum] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        intz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        binnaz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.bytes] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        encoded: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.bytes] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        uidz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        charz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        setz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableSet[builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...
    ) -> None: ...

    def __call__(
        self, *,
        enumz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[_fbthrift_MyEnum] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        intz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        binnaz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.bytes] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        encoded: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.bytes] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        uidz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        charz: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        setz: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableSet[builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[_fbthrift_python_mutable_containers.MutableSet[_fbthrift_MyEnum], _fbthrift_python_mutable_containers.MutableSet[builtins.int], _fbthrift_python_mutable_containers.MutableSet[builtins.bytes], _fbthrift_python_mutable_containers.MutableSet[builtins.bytes], _fbthrift_python_mutable_containers.MutableSet[builtins.int], _fbthrift_python_mutable_containers.MutableSet[builtins.int], _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableSet[builtins.int]]]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.SetStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.SetStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.SetStruct": ...  # type: ignore
_fbthrift_SetStruct = SetStruct

class MapStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.MapStruct):
    @property
    def enumz(self) -> _fbthrift_python_mutable_containers.MutableMap[_fbthrift_MyEnum, builtins.str]: ...
    @enumz.setter
    def enumz(self, value: _fbthrift_python_mutable_containers.MutableMap[_fbthrift_MyEnum, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def intz(self) -> _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str]]: ...
    @intz.setter
    def intz(self, value: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str]] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def binnaz(self) -> _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_PrimitiveStruct]]: ...
    @binnaz.setter
    def binnaz(self, value: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_PrimitiveStruct]] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def encoded(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.float]: ...
    @encoded.setter
    def encoded(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.float] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def flotz(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.float]: ...
    @flotz.setter
    def flotz(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.float] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def map_list(self) -> _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.int]]: ...
    @map_list.setter
    def map_list(self, value: _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def list_map(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]]: ...
    @list_map.setter
    def list_map(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def fast_list_map(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.float]]: ...
    @fast_list_map.setter
    def fast_list_map(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.float]] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def buf_map(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_iobuf.IOBuf]: ...
    @buf_map.setter
    def buf_map(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_iobuf.IOBuf] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def unsigned_list_map(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]]: ...
    @unsigned_list_map.setter
    def unsigned_list_map(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    def __init__(
        self, *,
        enumz: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[_fbthrift_MyEnum, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        intz: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        binnaz: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_PrimitiveStruct] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        encoded: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.float] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        flotz: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.float] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        map_list: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        list_map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        fast_list_map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.float]] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        buf_map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_iobuf.IOBuf] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        unsigned_list_map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...
    ) -> None: ...

    def __call__(
        self, *,
        enumz: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[_fbthrift_MyEnum, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        intz: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        binnaz: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_PrimitiveStruct] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        encoded: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.float] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        flotz: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.float] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        map_list: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.int]] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        list_map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        fast_list_map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.float]] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        buf_map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_iobuf.IOBuf] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        unsigned_list_map: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[_fbthrift_python_mutable_containers.MutableMap[_fbthrift_MyEnum, builtins.str], _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.str], _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_PrimitiveStruct], _fbthrift_python_mutable_containers.MutableMap[builtins.str, builtins.float], _fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.float], _fbthrift_python_mutable_containers.MutableList[_fbthrift_python_mutable_containers.MutableMap[builtins.int, builtins.int]], _fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]], _fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.float]], _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, _fbthrift_iobuf.IOBuf], _fbthrift_python_mutable_containers.MutableMap[builtins.int, _fbthrift_python_mutable_containers.MutableList[builtins.int]]]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.MapStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.MapStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.MapStruct": ...  # type: ignore
_fbthrift_MapStruct = MapStruct

class ComposeStruct(_fbthrift_python_mutable_types.MutableStruct, _fbthrift_python_abstract_types.ComposeStruct):
    @property
    def enum_(self) -> _fbthrift_MyEnum: ...
    @enum_.setter
    def enum_(self, value: _fbthrift_MyEnum) -> None: ...

    @property
    def renamed_(self) -> _fbthrift_AnnoyingEnum: ...
    @renamed_.setter
    def renamed_(self, value: _fbthrift_AnnoyingEnum) -> None: ...

    @property
    def primitive(self) -> _fbthrift_PrimitiveStruct: ...
    @primitive.setter
    def primitive(self, value: _fbthrift_PrimitiveStruct) -> None: ...

    @property
    def aliased(self) -> _fbthrift_ListStruct: ...
    @aliased.setter
    def aliased(self, value: _fbthrift_ListStruct) -> None: ...

    @property
    def xenum(self) -> _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.DepEnum: ...
    @xenum.setter
    def xenum(self, value: _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.DepEnum) -> None: ...

    @property
    def xstruct(self) -> _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.DepStruct: ...
    @xstruct.setter
    def xstruct(self, value: _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.DepStruct) -> None: ...

    @property
    def friends(self) -> _fbthrift_python_mutable_containers.MutableList[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.DepStruct]: ...
    @friends.setter
    def friends(self, value: _fbthrift_python_mutable_containers.MutableList[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.DepStruct] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def serial_struct(self) -> _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types.SerializedStruct: ...
    @serial_struct.setter
    def serial_struct(self, value: _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types.SerializedStruct) -> None: ...

    @property
    def serial_union(self) -> _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types.SerializedUnion: ...
    @serial_union.setter
    def serial_union(self, value: _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types.SerializedUnion) -> None: ...

    @property
    def serial_error(self) -> _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types.SerializedError: ...
    @serial_error.setter
    def serial_error(self, value: _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types.SerializedError) -> None: ...

    def __init__(
        self, *,
        enum_: _typing.Optional[_fbthrift_MyEnum]=...,
        renamed_: _typing.Optional[_fbthrift_AnnoyingEnum]=...,
        primitive: _typing.Optional[_fbthrift_PrimitiveStruct]=...,
        aliased: _typing.Optional[_fbthrift_ListStruct]=...,
        xenum: _typing.Optional[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types._fbthrift_DepEnum]=...,
        xstruct: _typing.Optional[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types._fbthrift_DepStruct]=...,
        friends: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types._fbthrift_DepStruct] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        serial_struct: _typing.Optional[_fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types._fbthrift_SerializedStruct]=...,
        serial_union: _typing.Optional[_fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types._fbthrift_SerializedUnion]=...,
        serial_error: _typing.Optional[_fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types._fbthrift_SerializedError]=...
    ) -> None: ...

    def __call__(
        self, *,
        enum_: _typing.Optional[_fbthrift_MyEnum]=...,
        renamed_: _typing.Optional[_fbthrift_AnnoyingEnum]=...,
        primitive: _typing.Optional[_fbthrift_PrimitiveStruct]=...,
        aliased: _typing.Optional[_fbthrift_ListStruct]=...,
        xenum: _typing.Optional[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types._fbthrift_DepEnum]=...,
        xstruct: _typing.Optional[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types._fbthrift_DepStruct]=...,
        friends: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types._fbthrift_DepStruct] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        serial_struct: _typing.Optional[_fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types._fbthrift_SerializedStruct]=...,
        serial_union: _typing.Optional[_fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types._fbthrift_SerializedUnion]=...,
        serial_error: _typing.Optional[_fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types._fbthrift_SerializedError]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[_fbthrift_MyEnum, _fbthrift_AnnoyingEnum, _fbthrift_PrimitiveStruct, _fbthrift_ListStruct, _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.DepEnum, _fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.DepStruct, _fbthrift_python_mutable_containers.MutableList[_fbthrift__test__fixtures__python_capi__thrift_dep__thrift_mutable_types.DepStruct], _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types.SerializedStruct, _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types.SerializedUnion, _fbthrift__test__fixtures__python_capi__serialized_dep__thrift_mutable_types.SerializedError]]]: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.ComposeStruct": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.ComposeStruct": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.ComposeStruct": ...  # type: ignore
_fbthrift_ComposeStruct = ComposeStruct

class Onion(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.Onion):
    @property
    def myEnum(self) -> _fbthrift_MyEnum: ...
    @myEnum.setter
    def myEnum(self, value: _fbthrift_MyEnum) -> None: ...

    @property
    def myStruct(self) -> _fbthrift_PrimitiveStruct: ...
    @myStruct.setter
    def myStruct(self, value: _fbthrift_PrimitiveStruct) -> None: ...

    @property
    def myString(self) -> builtins.str: ...
    @myString.setter
    def myString(self, value: builtins.str) -> None: ...

    @property
    def intSet(self) -> _fbthrift_python_mutable_containers.MutableSet[builtins.int]: ...
    @intSet.setter
    def intSet(self, value: _fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper) -> None: ...

    @property
    def doubleList(self) -> _fbthrift_python_mutable_containers.MutableList[builtins.float]: ...
    @doubleList.setter
    def doubleList(self, value: _fbthrift_python_mutable_containers.MutableList[builtins.float] | _fbthrift_python_mutable_types._ThriftListWrapper) -> None: ...

    @property
    def strMap(self) -> _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, builtins.str]: ...
    @strMap.setter
    def strMap(self, value: _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper) -> None: ...

    @property
    def adapted_int(self) -> builtins.int: ...
    @adapted_int.setter
    def adapted_int(self, value: builtins.int) -> None: ...

    def __init__(
        self, *,
        myEnum: _typing.Optional[_fbthrift_MyEnum]=...,
        myStruct: _typing.Optional[_fbthrift_PrimitiveStruct]=...,
        myString: _typing.Optional[builtins.str]=...,
        intSet: _typing.Optional[_fbthrift_python_mutable_containers.MutableSet[builtins.int] | _fbthrift_python_mutable_types._ThriftSetWrapper]=...,
        doubleList: _typing.Optional[_fbthrift_python_mutable_containers.MutableList[builtins.float] | _fbthrift_python_mutable_types._ThriftListWrapper]=...,
        strMap: _typing.Optional[_fbthrift_python_mutable_containers.MutableMap[builtins.bytes, builtins.str] | _fbthrift_python_mutable_types._ThriftMapWrapper]=...,
        adapted_int: _typing.Optional[builtins.int]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: Onion.FbThriftUnionFieldEnum = ...
        myEnum: Onion.FbThriftUnionFieldEnum = ...
        myStruct: Onion.FbThriftUnionFieldEnum = ...
        myString: Onion.FbThriftUnionFieldEnum = ...
        intSet: Onion.FbThriftUnionFieldEnum = ...
        doubleList: Onion.FbThriftUnionFieldEnum = ...
        strMap: Onion.FbThriftUnionFieldEnum = ...
        adapted_int: Onion.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, _fbthrift_MyEnum, _fbthrift_PrimitiveStruct, builtins.str, _fbthrift_python_mutable_containers.MutableSet[builtins.int], _fbthrift_python_mutable_containers.MutableList[builtins.float], _fbthrift_python_mutable_containers.MutableMap[builtins.bytes, builtins.str], builtins.int]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.Onion` inconsistently. Type `Onion.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.Onion.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.Onion": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.Onion": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.Onion": ...  # type: ignore
_fbthrift_Onion = Onion

class SomeBinary(_fbthrift_python_mutable_types.MutableUnion, _fbthrift_python_abstract_types.SomeBinary):
    @property
    def iobuf(self) -> _fbthrift_iobuf.IOBuf: ...
    @iobuf.setter
    def iobuf(self, value: _fbthrift_iobuf.IOBuf) -> None: ...

    @property
    def iobuf_ptr(self) -> _fbthrift_iobuf.IOBuf: ...
    @iobuf_ptr.setter
    def iobuf_ptr(self, value: _fbthrift_iobuf.IOBuf) -> None: ...

    @property
    def iobufRef(self) -> _fbthrift_iobuf.IOBuf: ...
    @iobufRef.setter
    def iobufRef(self, value: _fbthrift_iobuf.IOBuf) -> None: ...

    def __init__(
        self, *,
        iobuf: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        iobuf_ptr: _typing.Optional[_fbthrift_iobuf.IOBuf]=...,
        iobufRef: _typing.Optional[_fbthrift_iobuf.IOBuf]=...
    ) -> None: ...



    class FbThriftUnionFieldEnum(enum.Enum):
        EMPTY: SomeBinary.FbThriftUnionFieldEnum = ...
        iobuf: SomeBinary.FbThriftUnionFieldEnum = ...
        iobuf_ptr: SomeBinary.FbThriftUnionFieldEnum = ...
        iobufRef: SomeBinary.FbThriftUnionFieldEnum = ...

    fbthrift_current_value: _typing.Final[_typing.Union[None, _fbthrift_iobuf.IOBuf, _fbthrift_iobuf.IOBuf, _fbthrift_iobuf.IOBuf]]
    # pyre-ignore[15]: `fbthrift_current_field` overrides attribute defined in `_fbthrift_python_abstract_types.SomeBinary` inconsistently. Type `SomeBinary.FbThriftUnionFieldEnum` is not a subtype of the overridden attribute `_fbthrift_python_abstract_types.SomeBinary.FbThriftUnionFieldEnum`
    fbthrift_current_field: _typing.Final[FbThriftUnionFieldEnum]
    def get_type(self) -> FbThriftUnionFieldEnum: ...
    def _to_python(self) -> "test.fixtures.python_capi.module.thrift_types.SomeBinary": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "test.fixtures.python_capi.module.types.SomeBinary": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.SomeBinary": ...  # type: ignore
_fbthrift_SomeBinary = SomeBinary

uint64 = builtins.int
ui64 = builtins.int
signed_byte = builtins.int
IOBuf = _fbthrift_iobuf.IOBuf
IOBufPtr = _fbthrift_iobuf.IOBuf
ListAlias = _fbthrift_ListStruct
