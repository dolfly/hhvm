#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import typing as _typing
import builtins


import folly.iobuf as _fbthrift_iobuf
import module.thrift_abstract_types as _fbthrift_python_abstract_types
import thrift.python.types as _fbthrift_python_types
import thrift.python.mutable_types as _fbthrift_python_mutable_types
import thrift.python.mutable_exceptions as _fbthrift_python_mutable_exceptions
import thrift.python.mutable_containers as _fbthrift_python_mutable_containers


class Fiery(_fbthrift_python_mutable_exceptions.MutableGeneratedError, _fbthrift_python_abstract_types.Fiery):
    @property
    def message(self) -> builtins.str: ...
    @message.setter
    def message(self, value: builtins.str) -> None: ...

    def __init__(
        self, *,
        message: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str]]]: ...
    def _to_python(self) -> "module.thrift_types.Fiery": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.Fiery": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.Fiery": ...  # type: ignore
_fbthrift_Fiery = Fiery

class Serious(_fbthrift_python_mutable_exceptions.MutableGeneratedError, _fbthrift_python_abstract_types.Serious):
    @property
    def not_sonnet(self) -> _typing.Optional[builtins.str]: ...
    @not_sonnet.setter
    def not_sonnet(self, value: _typing.Optional[builtins.str]) -> None: ...

    def __init__(
        self, *,
        not_sonnet: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str]]]: ...
    def _to_python(self) -> "module.thrift_types.Serious": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.Serious": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.Serious": ...  # type: ignore
_fbthrift_Serious = Serious

class ComplexFieldNames(_fbthrift_python_mutable_exceptions.MutableGeneratedError, _fbthrift_python_abstract_types.ComplexFieldNames):
    @property
    def error_message(self) -> builtins.str: ...
    @error_message.setter
    def error_message(self, value: builtins.str) -> None: ...

    @property
    def internal_error_message(self) -> builtins.str: ...
    @internal_error_message.setter
    def internal_error_message(self, value: builtins.str) -> None: ...

    def __init__(
        self, *,
        error_message: _typing.Optional[builtins.str]=...,
        internal_error_message: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str, builtins.str]]]: ...
    def _to_python(self) -> "module.thrift_types.ComplexFieldNames": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.ComplexFieldNames": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.ComplexFieldNames": ...  # type: ignore
_fbthrift_ComplexFieldNames = ComplexFieldNames

class CustomFieldNames(_fbthrift_python_mutable_exceptions.MutableGeneratedError, _fbthrift_python_abstract_types.CustomFieldNames):
    @property
    def error_message(self) -> builtins.str: ...
    @error_message.setter
    def error_message(self, value: builtins.str) -> None: ...

    @property
    def internal_error_message(self) -> builtins.str: ...
    @internal_error_message.setter
    def internal_error_message(self, value: builtins.str) -> None: ...

    def __init__(
        self, *,
        error_message: _typing.Optional[builtins.str]=...,
        internal_error_message: _typing.Optional[builtins.str]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str, builtins.str]]]: ...
    def _to_python(self) -> "module.thrift_types.CustomFieldNames": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.CustomFieldNames": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.CustomFieldNames": ...  # type: ignore
_fbthrift_CustomFieldNames = CustomFieldNames

class ExceptionWithPrimitiveField(_fbthrift_python_mutable_exceptions.MutableGeneratedError, _fbthrift_python_abstract_types.ExceptionWithPrimitiveField):
    @property
    def message(self) -> builtins.str: ...
    @message.setter
    def message(self, value: builtins.str) -> None: ...

    @property
    def error_code(self) -> builtins.int: ...
    @error_code.setter
    def error_code(self, value: builtins.int) -> None: ...

    def __init__(
        self, *,
        message: _typing.Optional[builtins.str]=...,
        error_code: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str, builtins.int]]]: ...
    def _to_python(self) -> "module.thrift_types.ExceptionWithPrimitiveField": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.ExceptionWithPrimitiveField": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.ExceptionWithPrimitiveField": ...  # type: ignore
_fbthrift_ExceptionWithPrimitiveField = ExceptionWithPrimitiveField

class ExceptionWithStructuredAnnotation(_fbthrift_python_mutable_exceptions.MutableGeneratedError, _fbthrift_python_abstract_types.ExceptionWithStructuredAnnotation):
    @property
    def message_field(self) -> builtins.str: ...
    @message_field.setter
    def message_field(self, value: builtins.str) -> None: ...

    @property
    def error_code(self) -> builtins.int: ...
    @error_code.setter
    def error_code(self, value: builtins.int) -> None: ...

    def __init__(
        self, *,
        message_field: _typing.Optional[builtins.str]=...,
        error_code: _typing.Optional[builtins.int]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.str, builtins.int]]]: ...
    def _to_python(self) -> "module.thrift_types.ExceptionWithStructuredAnnotation": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.ExceptionWithStructuredAnnotation": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.ExceptionWithStructuredAnnotation": ...  # type: ignore
_fbthrift_ExceptionWithStructuredAnnotation = ExceptionWithStructuredAnnotation

class Banal(_fbthrift_python_mutable_exceptions.MutableGeneratedError, _fbthrift_python_abstract_types.Banal):
    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[None]]]: ...
    def _to_python(self) -> "module.thrift_types.Banal": ...  # type: ignore
    def _to_mutable_python(self) -> _typing.Self: ...
    def _to_py3(self) -> "module.types.Banal": ...  # type: ignore
    def _to_py_deprecated(self) -> "module.ttypes.Banal": ...  # type: ignore
_fbthrift_Banal = Banal


class _fbthrift_Raiser_doBland_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_Raiser_doBland_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[None]

    def __init__(
        self, *, success: _typing.Optional[None] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            None,
        ]]]: ...


class _fbthrift_Raiser_doRaise_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_Raiser_doRaise_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[None]
    b: _typing.Final[_fbthrift_Banal]
    f: _typing.Final[_fbthrift_Fiery]
    s: _typing.Final[_fbthrift_Serious]

    def __init__(
        self, *, success: _typing.Optional[None] = ..., _ex0__b: _typing.Optional[_fbthrift_Banal]=..., _ex1__f: _typing.Optional[_fbthrift_Fiery]=..., _ex2__s: _typing.Optional[_fbthrift_Serious]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            None,
            _fbthrift_Banal,
            _fbthrift_Fiery,
            _fbthrift_Serious,
        ]]]: ...


class _fbthrift_Raiser_get200_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_Raiser_get200_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[builtins.str]

    def __init__(
        self, *, success: _typing.Optional[builtins.str] = ...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            builtins.str,
        ]]]: ...


class _fbthrift_Raiser_get500_args(_fbthrift_python_mutable_types.MutableStruct):

    def __init__(
        self,
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[None]]]: ...


class _fbthrift_Raiser_get500_result(_fbthrift_python_mutable_types.MutableStruct):
    success: _typing.Final[builtins.str]
    f: _typing.Final[_fbthrift_Fiery]
    b: _typing.Final[_fbthrift_Banal]
    s: _typing.Final[_fbthrift_Serious]

    def __init__(
        self, *, success: _typing.Optional[builtins.str] = ..., _ex0__f: _typing.Optional[_fbthrift_Fiery]=..., _ex1__b: _typing.Optional[_fbthrift_Banal]=..., _ex2__s: _typing.Optional[_fbthrift_Serious]=...
    ) -> None: ...

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[
        str,
        _typing.Union[
            builtins.str,
            _fbthrift_Fiery,
            _fbthrift_Banal,
            _fbthrift_Serious,
        ]]]: ...
