#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import typing as _typing
import builtins


import folly.iobuf as _fbthrift_iobuf
import includes.thrift_abstract_types as _fbthrift_python_abstract_types
import thrift.python.types as _fbthrift_python_types
import thrift.python.exceptions as _fbthrift_python_exceptions

import transitive.thrift_types as _fbthrift__transitive__thrift_types


class Included(_fbthrift_python_types.Struct, _fbthrift_python_abstract_types.Included):
    MyIntField: _typing.Final[builtins.int] = ...
    MyTransitiveField: _typing.Final[_fbthrift__transitive__thrift_types.Foo] = ...
    def __init__(
        self, *,
        MyIntField: _typing.Optional[builtins.int]=...,
        MyTransitiveField: _typing.Optional[_fbthrift__transitive__thrift_types._fbthrift_Foo]=...
    ) -> None: ...

    def __call__(
        self, *,
        MyIntField: _typing.Optional[builtins.int]=...,
        MyTransitiveField: _typing.Optional[_fbthrift__transitive__thrift_types._fbthrift_Foo]=...
    ) -> _typing.Self: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[builtins.str, _typing.Union[builtins.int, _fbthrift__transitive__thrift_types.Foo]]]: ...
    def _to_python(self) -> _typing.Self: ...
    def _to_mutable_python(self) -> "includes.thrift_mutable_types.Included": ...  # type: ignore
    def _to_py3(self) -> "includes.types.Included": ...  # type: ignore
    def _to_py_deprecated(self) -> "includes.ttypes.Included": ...  # type: ignore
_fbthrift_Included = Included


ExampleIncluded: _fbthrift_Included = ...

IncludedConstant: builtins.int = ...

IncludedInt64 = builtins.int
TransitiveFoo = _fbthrift__transitive__thrift_types.Foo
